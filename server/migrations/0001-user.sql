CREATE OR REPLACE FUNCTION tf_set_updated_at() RETURNS TRIGGER AS
$$
    BEGIN
        NEW.updated_at := now();
        RETURN NEW;
    END;
$$
LANGUAGE 'plpgsql';

CREATE TABLE t_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP,
    deactivated_at TIMESTAMP,
    deleted_at TIMESTAMP,
    name TEXT NOT NULL CHECK ( char_length(name) < 300 AND name <> '' ),
    username TEXT NOT NULL UNIQUE CHECK ( char_length(username) < 128 AND username <> '' ),
    password TEXT NOT NULL,
    email TEXT,
    administrator BOOLEAN NOT NULL DEFAULT FALSE,
    phone_1 BIGINT NOT NULL CHECK (phone_1 > 1111111111),
    phone_2 BIGINT CHECK (phone_2 > 1111111111)
);

CREATE TRIGGER tf_set_updated_at_user
BEFORE UPDATE
ON t_user
FOR EACH ROW WHEN (OLD.* IS DISTINCT FROM NEW.*)
EXECUTE PROCEDURE tf_set_updated_at();

INSERT INTO t_migration (migration) VALUES ('0001-user');
